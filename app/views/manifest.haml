.box.box-100.altbox
  / .altbox for alternative box's color
  .boxin
    .header
      %h3 Available Aircraft
    .content
      %table
        %thead
          %tr
            %td{:style => "width: 90px"}
            %td.tc Name
            %td.tc{:style => "width: 90px"} Flight
            %td.tc{:style => 'width: 275px'} Next Departure
            %td.tc{:style => "width: 70px"} Next Flight
        %tbody.striped
          -Aircraft.all.find_all{|a| a.available}.each_with_index do |aircraft, i|
            -aircraft_id = aircraft.id
            %tr{:class => ( i == 0 ? "first" : "")}
              %td
                %a.awesome.medium{:href => "#newflight", :onclick => "newFlight('#{aircraft_id}'); return false;", :style => "position: relative; top: -2px;color: white", :class => (aircraft.on_hold ? "disabled" : "green"), :id => (aircraft_id+'new')} New Flight
                
              %td
                -if aircraft.on_hold == true
                  %a.awesome.small.green{:href => "#", :style => "color: white;margin-right: 3px; position: relative; top: -3px;-webkit-box-shadow: none;-moz-box-shadow: none;", :onclick => "holdAircraft('#{aircraft_id}', 'false'); return false;", :id => (aircraft_id+'hold')} &#9658;
                  %b{:href => "#", :style => "font-size: 150%; color: #D00", :id => (aircraft_id+'name')}= aircraft.name + " (on hold)"
                -else
                  %a.awesome.small.gray-red{:href => "#", :style => "color: white;margin-right: 3px; position: relative; top: -3px;-webkit-box-shadow: none;-moz-box-shadow: none;", :onclick => "holdAircraft('#{aircraft_id}', 'true'); return false;", :id => (aircraft_id+'hold')} &#10073;&#8202;&#10073;
                  %b{:href => "#", :style => "font-size: 150%", :id => (aircraft_id+'name')}= aircraft.name
              %td.tc{:style => "font-size: 125%"}
                - if aircraft.current_flight && (current_flight = Flight.get(aircraft.current_flight))
                  = current_flight.aircraft_prefix + ("%02.0f" % current_flight.number)
                - else
                  &mdash;
                %a.awesome.medium.green{:href => "#", :style => "float: right; color: white;padding: 5px; width: 10px; height: 10px; display: #{((current_flight.nil? || aircraft.on_hold) ? "none" : "auto")} ", :onclick => "takeOff('#{current_flight.id}'); return false;", :id => (aircraft_id+'takeoff')}
                  %img{:src => "/images/takeoff-bigarrow.png", :style => "position: relative; top: -3px; left: -3px;"}
                
              %td.tc{:style => "font-size: 115%"}
                %a.stat.red.flat-right{:href => "#", :style => "position: relative; top: -1px;border-right: 1px solid #900", :onclick => "editTakeOffTime('#{aircraft_id}', '-5'); return false;"} -&#8202;&#8202;&#8202;5
                %a.stat.red.flat-right.merge-left{:href => "#", :style => "position: relative; top: -1px;", :onclick => "editTakeOffTime('#{aircraft_id}', '-1'); return false;"} -&#8202;&#8202;1
                %a.vtip.flight-time.stat.gray{:style => "margin-left: -5px; background-color: #333; font-size: 100%; padding: 5px 0; width: 125px", :alt => "Flight Time", :title => (aircraft.departure_time ? Time.parse(aircraft.departure_time).strftime("%I:%M%p") : "Unscheduled")}
                  -if aircraft.departure_time
                    -time_left = (Time.parse(aircraft.departure_time) - Time.now).to_i
                    -if time_left > 0
                      .absolute_depart{:id => aircraft_id, :style => "position: absolute; visibility: hidden;"}= time_left.to_s
                      .departure_time{:id => aircraft_id+"prettydepart", :style => "display: inline;"}= (time_left/60.0).ceil.to_s
                      &nbsp;Minutes
                    -else
                      Airborn?
                  -else
                    Unscheduled
                %a.stat.green.merge-left.flat-left.flat-right{:href => "#", :style => "position: relative; top: -1px;border-right: 1px solid #090", :onclick => "editTakeOffTime('#{aircraft_id}', '1'); return false;"} +1
                %a.stat.green.merge-left{:href => "#", :style => "position: relative; top: -1px;", :onclick => "editTakeOffTime('#{aircraft_id}', '5'); return false;"} +&#8202;5
                
              %td.tc
                -if aircraft.next_flight && (next_flight = Flight.get(aircraft.next_flight))
                  = next_flight.aircraft_prefix + ("%02.0f" % next_flight.number)
                -else
                  &mdash;

:javascript
  function editTakeOffTime(aircraftID, time){
    var new_depart = parseInt($('#'+aircraftID).text()) + (parseInt(time)*60);
    $('#'+aircraftID).text(new_depart);
    $('#'+aircraftID+"prettydepart").html(Math.ceil(new_depart/60))
    $.post(('/ajax/edittakeofftime?aircraft='+aircraftID+'&time='+time), function(data) {
      updatePages();
    });
    return false;
  }
  function holdAircraft(aircraftID, hold){
    if (hold == "false"){
      $("#"+aircraftID+'hold').removeClass("green").addClass("gray-red").html("&#10073;&#8202;&#10073;");
      $("#"+aircraftID+"name").css("color", "#037");
      $("#"+aircraftID+"name").text($("#"+aircraftID+"name").text().replace(" (on hold)", ""));
      $("#"+aircraftID+"new").removeClass("disabled").addClass("green");
      $("#"+aircraftID+"takeoff").show();
    }else{
      $("#"+aircraftID+"hold").removeClass("gray-red").addClass("green").html("&#9658;");
      $("#"+aircraftID+"name").css("color", "#D00");
      $("#"+aircraftID+"name").text($("#"+aircraftID+"name").text()+" (on hold)");
      $("#"+aircraftID+"new").removeClass("green").addClass("disabled");
      $("#"+aircraftID+"takeoff").hide();
    }
    $.post(('/ajax/hold-aircraft?aircraft='+aircraftID+'&hold='+hold), function(data) {
      updatePages();
    });
    return false;
  }
  function takeOff(flightID){
    $.post(('/ajax/takeoff?flight='+flightID), function(data) {
      updatePages();
    });
    return false;
  }
  
  
.box.box-60.altbox
  / .altbox for alternative box's color
  .boxin
    .header
      %h3 Flights

    .content
      %table{:cellspacing => "0"}
        %thead
          %tr
            %td{:style => "width: 10px"} 
            %th Name
            %td.tc{:style => "width: 100px"}  Plane
            %td.tc{:style => "width: 40px"}  Jumpers
            %td.tc{:style => "width: 50px"}  Weight
            %td.tc{:style => "width: 80px"}  Est. Takeoff
        %tbody.expander
          -today = Time.now.strftime("%m/%d/%y")
          -Flight.all.find_all{|f| f.jump_date == today}.sort_by{|f| f.number}.reverse.each_with_index do |flight, i|
            - plane = Aircraft.get(flight.aircraft_id)
            %tr.manifest.title-row{:class => (i == 0 ? "first" : ""), :style => "color: #{(flight.completed || flight.cancelled) ? "#BBB" : "#036"}"}
              %td.info.arrow
                &#9658;
              %td{:style => "font-size: 125%"}= (plane ? plane.flight_prefix : "AA") + ("%02.0f" % flight.number)
              %td.tc= plane.name if plane
              %td.tc
                -flight.jumper_ids ||= [] #TODO require array from the start
                -cleared_jumpers = flight.jumper_ids.length
                -fail_jumpers = 1
                %a.stat.green.flat-right{:href => "#", :style => (cleared_jumpers > 0 ? "" : "visibility: hidden")}= cleared_jumpers
                %a.stat.red.merge-left.vtip{:href => "#", :title => "Kent McCullough's Rig expired on 7/18/10", :style => (fail_jumpers > 0 ? "" : "visibility: hidden")}= fail_jumpers
              %td.tc= rand(3000)
              %td.tc #{5-i}:#{rand(60)}PM
            %tr.expander-data{:style => "background: #F5F5F5;"}
              %td.tc{:colspan => 6, :style => "border-bottom: 1px solid #BBB; padding: 0"}
                %table.manifest{:style => "padding-left: 25px"}
                  %thead
                    %tr
                      %th Name
                      %th.tc{:style => "width: 100px"} Type
                      %th.tc{:style => "width: 100px"} Jump Plan
                  %tbody{:title => flight.id}
                    -flight.jumper_ids.map{|j_id| Jumper.get(j_id)}.each do |jumper|
                      %tr{:style => "cursor: auto;"}
                        %td= jumper.name
                        %td.tc= jumper.type
                        %td.tc
                          %select
                            %option Tandem
                            %option AFF
                    -if flight.jumper_ids.empty?
                      %tr{:style => "cursor: auto;"}
                        %td.tc{:colspan => 3}
                          .placeholder Drag Jumpers Here
.box.box-40.altbox
  .boxin
    .header
      %h3 Students
      %input.search{:type => "text", :size => "25", :style => "float: right; margin-right: 20px;", :name => "jumpersearch", :placeholder => "Filter members..."}
    .content
      %table{:cellspacing => "0"}
        %thead
          %tr
            %th{:style => "width: 8px"} &nbsp;
            %td Name
            %td.tc{:style => "width: 60px"} Type
        %tbody
          -Jumper.all.each_with_index do |jumper, i|
            %tr.member{:style => "width: 365px; cursor: move;"}
              %td.jumper-id{:style => 'display: none'}= jumper.id
              
              %td.tc{:style => "width: 8px"}
                -if jumper.available
                  %img{:src => "/css/img/available.png"}
                -else
                  %img{:src => "/css/img/unavailable.png"}
              %td.name{:style => "width: 80px"}= jumper.name
              %td.type.tc{:style => "width: 60px"}= jumper.type.to_s
.box.box-40.altbox{:style => "float: right"}
  .boxin
    .header
      %h3 Members
      %input.search{:type => "text", :size => "25", :style => "float: right; margin-right: 20px;", :name => "jumpersearch", :placeholder => "Filter members..."}
    .content
      %table{:cellspacing => "0"}
        %thead
          %tr
            %th{:style => "width: 8px"} &nbsp;
            %td{:style => "width: 80px"} Name
            %td.tc{:style => "width: 60px"} Type
        %tbody
          -Jumper.all.each_with_index do |jumper, i|
            %tr.member{:style => "width: 365px; cursor: move;"}
              %td.jumper-id{:style => 'display: none'}= jumper.id
              
              %td.tc{:style => "width: 8px"}
                -if jumper.available
                  %img{:src => "/css/img/available.png"}
                -else
                  %img{:src => "/css/img/unavailable.png"}
              %td.name{:style => "width: 80px"}= jumper.name
              %td.type.tc{:style => "width: 60px"}= jumper.type.to_s
:javascript
  $(document).ready(function(){
    vtip();
    $('tbody.striped tr:even').addClass('even');
    $("tr.expander-data").hide();
    $('tbody.expander tr.title-row').click(function(){
      var nextRow = $(this).next();
      var arrow = $(this).find(".arrow");
      if (nextRow.is(':visible')){
        arrow.html("&#9658;")
        nextRow.fadeOut("fast");
      }else{
        arrow.html("&#9660;")
        nextRow.fadeIn("fast");
      }
      return false;
    });
    $(".student, .member").draggable({
      stop: function(event, ui) {
        var tr = $(event.target).closest('tr');
      },
      helper: function(event){
        var helperdiv = $('<div class="drag-jumper" style="cursor: move">' + $(this).children().filter('.name').html() + '</div>')
        return helperdiv
        .find('table').append($(event.target).closest('tr').clone()).end().appendTo('body');
      },
      cursor: 'move',
      cursorAt: {left:75,top:20}
    });
    
    $(".manifest").droppable({
      drop: function(event, ui) {
        var dropTo = this
        if ($(this).hasClass("title-row")) {
          dropTo = $(this).next().find("table tbody");
        } else{
          dropTo = $(this).find("tbody");
        }
        var flightID = $(dropTo).attr("title");
        
        var jumperID =  ui.draggable.children().filter('.jumper-id').text();
        $.post(('/ajax/add-jumper-to-flight/?jumper='+jumperID+"&flight="+flightID), function(data) {
          
        });
        $(dropTo).find(".placeholder").parent().parent().remove();
        var name = "<td class='first'>" + ui.draggable.children().filter('.name').text() + "</td>";
        var type = "<td class='tc'>" + ui.draggable.children().filter('.type').text() + "</td>";
        var options = "<td class='tc'><select><option>Tandem</option><option>AFF</option></td>";
        $("<tr></tr>").html(name + type + options).appendTo(dropTo)
      },
      hoverClass: 'drop-hover'
    });
    
  });
  function newFlight(aircraft_id){
    $.post(('/ajax/new-flight?aircraft='+aircraft_id), function(data) {
      $('#manifest').html(data);
    });
    return false;
  }
